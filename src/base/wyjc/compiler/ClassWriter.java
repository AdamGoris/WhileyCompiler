// This file is part of the Whiley-to-Java Compiler (wyjc).
//
// The Whiley-to-Java Compiler is free software; you can redistribute 
// it and/or modify it under the terms of the GNU General Public 
// License as published by the Free Software Foundation; either 
// version 3 of the License, or (at your option) any later version.
//
// The Whiley-to-Java Compiler is distributed in the hope that it 
// will be useful, but WITHOUT ANY WARRANTY; without even the 
// implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
// PURPOSE.  See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public 
// License along with the Whiley-to-Java Compiler. If not, see 
// <http://www.gnu.org/licenses/>
//
// Copyright 2010, David James Pearce. 

package wyjc.compiler;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.*;

import wyil.ModuleLoader;
import wyil.lang.Module;
import wyil.util.Logger;
import wyil.io.*;
import wyjvm.io.ClassFileWriter;
import wyjvm.lang.ClassFile;
import wyjvm.util.DeadCodeElimination;
import wyjvm.util.Validation;

public class ClassWriter implements Compiler.Stage {
	private ClassFileBuilder classBuilder;
	private final boolean validate;
	private final boolean deadCode;
	
	public ClassWriter(ModuleLoader loader) {
		this(loader,Collections.EMPTY_MAP);
	}
	
	public ClassWriter(ModuleLoader loader, Map<String, String> options) {
		classBuilder = new ClassFileBuilder(loader, wyjc.Main.MAJOR_VERSION,
				wyjc.Main.MINOR_VERSION);
		validate = !options.containsKey("nvalidate");
		deadCode = !options.containsKey("ndeadcode");		
	}	
	
	public String name() {
		return "class file writer";
	}
	
	public Module process(Module m, Logger logout) {
		long start = System.currentTimeMillis();
		ClassFile file = classBuilder.build(m);		
		if(validate) {			
			// validate generated bytecode
			new Validation().apply(file);
		}
		if(deadCode) {
			// eliminate any dead code that was introduced.		
			new DeadCodeElimination().apply(file);
		}
		
		// calculate filename
		String filename = m.filename().replace(".whiley", ".class");
		try {
			FileOutputStream out = new FileOutputStream(filename);		
			ClassFileWriter writer = new ClassFileWriter(out,null);			
			writer.write(file);
			logout.logTimedMessage("[" + m.filename() + "] class file written",
					System.currentTimeMillis() - start);
		} catch(IOException ex) {
			logout.logTimedMessage("[" + m.filename()
					+ "] failed writing class file (" + ex.getMessage() + ")",
					System.currentTimeMillis() - start);
		}
		return m;
	}	
	
}
