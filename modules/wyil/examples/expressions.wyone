
// ====================================================================
// Sum
// ====================================================================

term Sum{Expr...}

rewrite Sum{Num(int x), Num(int y), Expr... rest}:
    => Sum (Num(x+y) ++ rest)

//rewrite Sum{Var x, Var y, Expr... rest}:
//    => Sum (Mul{Num(2),x} ++ rest), if x == y

// ====================================================================
// Sum
// ====================================================================

term Mul{Expr...}

//rewrite Mul{Num(int x), Expr... rest}:
//    => Mul(rest), if x == 1

// ====================================================================
// Expr
// ====================================================================

term Num(int)
term Var(string)

class Expr as Num | Var | Sum | Mul
