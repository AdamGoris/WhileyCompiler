include "logic.wyone"
include "numerics.wyone"

// ====================================================================
// Record Expressions
// ====================================================================

term Record{[string,Expr]...} // NOTE: a map might be better here

// ====================================================================
// FieldOf
// ====================================================================

term FieldOf[RExpr,string]

reduce FieldOf[Record{[string f1, Expr v], * ...},string f2]:
    => v, if f1 == f2

reduce FieldOf[FieldUpdate[Expr src, string f1, Expr e],string f2]:
    => e, if f1 == f2
    => FieldOf[src,f2]

// ====================================================================
// FieldUpdate
// ====================================================================

term FieldUpdate[RExpr,string,Expr] // src,field,val

reduce FieldUpdate[Record{[string f1, Expr v], * ... rest}, string f2, Expr e]:
    => Record ({[f1,e]} ++ rest), if f1 == f2

// ====================================================================
// Expressions & Values
// ====================================================================

define Value as Record{[string,Value]...} | ...

define RExpr as VExpr | Record | FieldUpdate | ...

define VExpr as FieldOf | ...

define Expr as RExpr | ...