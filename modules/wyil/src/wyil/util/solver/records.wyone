include "logic.wyone"
include "numerics.wyone"

// ====================================================================
// Record Expressions
// ====================================================================

term Record{[string,Expr]...} // NOTE: a map might be better here
term RecordVal{[string,Value]...}
term FieldOf[Expr,string]
term FieldUpdate[Expr,string,Expr] // src,field,val

reduce Record{[string,Value]... fields}:
    => RecordVal(fields)

reduce FieldOf[RecordVal{[string f1, Value v], * ...},string f2]:
    => v, if f1 == f2

reduce FieldOf[Record{[string f1, Expr e], * ...},string f2]:
    => e, if f1 == f2

reduce FieldOf[FieldUpdate[Expr src, string f1, Expr e],string f2]:
    => e, if f1 == f2
    => FieldOf[src,f2]

reduce FieldUpdate[RecordVal{[string f1, Value v], * ... rest}, string f2, Expr e]:
    => Record ({[f1,e]} ++ rest), if f1 == f2

reduce FieldUpdate[Record{[string f1, Expr e1], * ... rest}, string f2, Expr e2]:
    => Record ({[f1,e2]} ++ rest), if f1 == f2

// ====================================================================
// Expressions & Values
// ====================================================================

class Value as RecordVal | ...
