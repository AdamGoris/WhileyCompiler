term True
term False
class Bool as True | False
term Not(Term)
term Var(String)

rewrite Not(True x):
    => False

rewrite Not(False x):
    => True

rewrite Not(Not(* x)):
    => x

class Term as Bool | Not | Var

term Equal[Num,Num]
term NotEqual[Num,Num]
term Num(int)

rewrite Equal[Num(int x), Num(int y)]:
    => True, if x == y
    => False

rewrite NotEqual[Num(int x), Num(int y)]:
    => True, if x != y
    => False

rewrite Not(NotEqual[* x, * y]):
    => Equal[x,y]




