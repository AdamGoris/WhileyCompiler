term True
term False
class Bool as True | False

term Var(string)

// ==================================================
// Theory of Logical Connectives
// ==================================================

// --- Logical And ---
term And{Term...}

rewrite And{Bool b, Term... xs}:
    => False, if b is False
    => And(xs)

//rewrite And{And(Term...xs), Term... ys}:
//    => And(xs ++ ys)

rewrite And(Term t):
    => t

rewrite And():
    => True

// --- Logical Or ---
term Or{Term...}

rewrite Or{Bool b, Term... xs}:
    => True, if b is True
    => Or(xs)

//rewrite Or{Or{Term...xs}, Term... ys}:
//    => Or(xs ++ ys)

rewrite Or(Term t):
    => t

rewrite Or():
    => False

// --- Logical Not ---
term Not(Term)

rewrite Not(Bool b):
    => True, if b is False
    => False

rewrite Not(Not(* x)):
    => x

// rewrite Not(And(Term... xs)):

// rewrite Not(Or(Term... xs)):

class Term as Bool | Var | Not | And | Or
