term False
term True
class Bool as True | False
term And{Term}
term Equals{|Term,Term|}
term Num(int)
term Var(string)

class Term as Bool | And | Equals | Var

rewrite And{False x, Term... rest}:
    => And (rest)

rewrite And{Equals{|Num(int x), * u|},Equals{|* v, Num(int y)|}}:
    => False, if u == v && x != y

rewrite And{Equals{|* x, * y|},Equals{|* u, * v|}}:
    => And{Equals{|x,y|},Equals{|u,v|},Equals{|x,v|}}, if y == u

rewrite Equals{|Num(int x), Num(int y)|}:
    => True, if x == y
    => False









