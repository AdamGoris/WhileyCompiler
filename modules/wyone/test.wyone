// An implementation of the Lambda Calculus :P

term Sum{|Expr...|}

term Neg(Expr)
term Var(string)
term And{Expr...}

reduce And{Sum{|Expr... xs|}, Expr... ys}:
    => let zs = { Neg(x) | x in xs }
       in And (zs ++ ys)

class Expr as Sum | Neg | Var
