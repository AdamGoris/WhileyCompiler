term True
term False
class Bool as True | False

term Not(Term)
term And{Term...}
term Or{Term...}
term Var(string)

// ====================================================================
// Not
// ====================================================================

rewrite Not(True):
    => False

rewrite Not(False):
    => True

rewrite Not(Not(* x)):
    => x

// rewrite Not(And{Term... xs})

// rewrite Not(Or{Term... xs})

rewrite Or{Not(Term x), Term y}:
    => True, if x == y

// ====================================================================
// And
// ====================================================================

rewrite And{}:
    => True

rewrite And{False, Term... xs}:
    => False

rewrite And{True, Term... xs}:
    => And (xs)

// rewrite And{Term x, Term y, Term... xs}:

rewrite And{And{Term... xs}, Term... ys}:
    => And (xs ++ ys)

// rewrite And{Or{Term... xs}, Term... ys}:

rewrite And{Not(Term x), Term y}:
    => False, if x == y

// ====================================================================
// Or
// ====================================================================

rewrite Or{}:
    => False

rewrite Or{True, Term... xs}:
    => True

rewrite Or{False, Term... xs}:
    => Or (xs)

// rewrite Or{Term x, Term y, Term... xs}:

rewrite Or{Or{Term... xs}, Term... ys}:
    => Or (xs ++ ys)

// ====================================================================
// Term
// ====================================================================

class Term as Bool | Not | And | Or | Var 






