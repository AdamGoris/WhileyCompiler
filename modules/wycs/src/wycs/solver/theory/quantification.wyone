include "logic.wyone"

// individual theories (e.g. sets, lists, etc) handle instantiation.

// ====================================================================
// ForAll
// ====================================================================

term ForAll[{[Var,SExpr]...}, BExpr]

reduce ForAll[{[Var,SExpr]...}, Bool b]:
       => b

reduce ForAll[{[Var,SExpr]...} xs, ForAll[{[Var,SExpr]...} ys, BExpr e]]:
       => ForAll[xs++ys,e]

reduce Not(ForAll[{[Var,SExpr]...} vars, BExpr be]):
       => Exists[vars, Not(be)]

infer ForAll[{[Var,SExpr]...} vs, Or{BExpr... bs}]:
       => let es = { ForAll[vs, b] | b in bs }
          in Or(es)

// ====================================================================
// Exists
// ====================================================================

term Exists[{[Var,SExpr]...}, BExpr]

reduce Exists[{[Var,SExpr]...},Bool b]:
       => b

reduce Exists[{[Var,SExpr]...} xs, Exists[{[Var,SExpr]...} ys, BExpr e]]:
       => Exists[xs++ys,e]

reduce Not(Exists[{[Var,SExpr]...} vars, BExpr be]):
       => ForAll[vars, Not(be)]

reduce And{Exists[{[Var,SExpr]...} vs, BExpr e], BExpr... es}:
       => Exists[vs, And(e++es)]

// ====================================================================
// Expressions & Values
// ====================================================================

define BExpr as ForAll | Exists | ...




